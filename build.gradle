import net.raphimc.viabedrock.generator.EnumGeneratorTask

plugins {
    id "java-library"
    id "base.base-conventions"
    id "base.fill-build-constants"
    id "viabedrock.publishing-conventions"
    id "via.run-with-viaproxy-task"
    id "net.raphimc.class-token-replacer" version "1.1.5"
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.10"
}

configurations {
    testImplementation.extendsFrom(compileOnly)
}

repositories {
    maven {
        name = "ViaVersion"
        url = "https://repo.viaversion.com"
    }
    maven {
        name = "Lenni0451"
        url = "https://maven.lenni0451.net/everything"
    }
    maven {
        name = "Minecraft Libraries"
        url = "https://libraries.minecraft.net"

        content {
            includeGroup "com.mojang"
        }
    }
    maven {
        name = "Jitpack"
        url = "https://jitpack.io"

        content {
            includeGroup "com.github.Oryxel"
        }
    }
}

dependencies {
    compileOnly "com.viaversion:viaversion-common:5.4.0-SNAPSHOT"
    compileOnly "org.yaml:snakeyaml:2.4"
    compileOnly "com.google.guava:guava:33.4.8-jre"
    compileOnly "io.netty:netty-handler:4.2.1.Final"
    compileOnly "com.google.code.gson:gson:2.13.1"

    api("io.netty:netty-codec-http:4.2.0.Final") {
        transitive = false
    }
    api "io.jsonwebtoken:jjwt-impl:0.12.6"
    api("io.jsonwebtoken:jjwt-gson:0.12.6") {
        exclude group: "com.google.code.gson", module: "gson"
    }
    api("net.lenni0451.mcstructs-bedrock:text:2.0.0") {
        exclude group: "com.google.code.gson", module: "gson"
    }
    api("net.lenni0451.mcstructs-bedrock:forms:2.0.0") {
        exclude group: "com.google.code.gson", module: "gson"
    }
    api "com.vdurmont:semver4j:3.1.0"
    api "com.mojang:brigadier:1.0.18"
    api "org.lz4:lz4-pure-java:1.8.0"
    api("com.github.Oryxel:CubeConverter:916cadb12a") {
        transitive = false
    }
    api("team.unnamed:mocha:3.0.1") {
        transitive = false
    }
}

def enumSourceDir = layout.buildDirectory.dir("generated/enums/main/java")
def enumGeneratorTask = tasks.register("enumGeneratorTask", EnumGeneratorTask) {
    commitHash = "0593de5e1b4b2ea2b8fcf52bbf89f03a7f16298a" // https://github.com/Mojang/bedrock-protocol-docs
    outputDirectory = enumSourceDir
}
tasks.compileJava.dependsOn(enumGeneratorTask)
tasks.sourcesJar.dependsOn(enumGeneratorTask)

sourceSets.main.java.srcDir(enumSourceDir)

idea {
    project.settings {
        taskTriggers {
            afterSync(enumGeneratorTask)
        }
    }
}
